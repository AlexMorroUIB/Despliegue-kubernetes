name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint k8s files
    steps:
      - uses: actions/checkout@v4
      - name: k8s Lint
        uses: azure/k8s-lint@v3
        with:
          manifests: k8s/

  test:
    runs-on: ubuntu-latest
    name: Test webapp
#    services:
#      registry:
#        image: registry:2
#        ports:
#          - 5000:5000
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build the Docker image
        run: |
          cd WebApp
          docker build -t webapp:latest .

      - name: Run webapp
        uses: addnab/docker-run-action@v3
        with:
          image: webapp:latest
          run: echo "wget -S -O - localhost/health > /dev/null"

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Build webapp docker image
    needs: test
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build the Docker image
        run: |
          cd WebApp
          docker build -t webapp:latest .
      - name: Upload image artifact
        uses: ishworkh/docker-image-artifact-upload@v2.0.1
        with:
          image: "webapp:latest"

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to k8s
    needs: build
    steps:
      - name: Deploy echo
        run: |
          cat <<EOF
          Para integrar la nueva versión en k8s deberías ejecutar los siguientes comandos:
          cd WebApp
          minikube image rm webapp:latest
          minikube image build -t webapp:latest .
          cd ../k8s
          kubectl delete -n webapp-ns deployment webapp-deployment
          kubectl apply -f ./webapp/web-deployment.yaml
          EOF